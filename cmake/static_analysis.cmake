function(enable_static_analysis)
  set(options CLANGTIDY CPPCHECK CPPLINT)
  cmake_parse_arguments(ENABLE_STATIC_ANALYSIS "${options}" "" "" ${ARGN})

  if(CMAKE_GENERATOR MATCHES "Visual Studio")
    message(AUTHOR_WARNING "VS generator detected - skipping cppcheck, clang-tidy, cpplint")
  else()
    if(ENABLE_STATIC_ANALYSIS_CPPCHECK)
      find_program(CPPCHECK_PROG NAMES cppcheck)
      if(CPPCHECK_PROG)
        message(STATUS "Found cppcheck")
        set(CMAKE_CXX_CPPCHECK "${CPPCHECK_PROG}")
        list(APPEND CMAKE_CXX_CPPCHECK "--enable=all" "--inline-suppr" "--suppress=missingIncludeSystem")
      else()
        message(STATUS "Not found cppcheck")
      endif()
    endif()
    if(ENABLE_STATIC_ANALYSIS_CLANGTIDY)
      find_program(CLANGTIDY_PROG NAMES clang-tidy)
      if(CLANGTIDY_PROG)
        message(STATUS "Found clang-tidy")
        set(CMAKE_CXX_CLANG_TIDY "${CLANGTIDY_PROG}")
        list(APPEND CMAKE_CXX_CLANG_TIDY "--quiet" "--format-style=file" "--fix")
      else()
        message(STATUS "Not found clang-tidy")
      endif()
    endif()
    if(ENABLE_STATIC_ANALYSIS_CPPLINT)
      find_program(CPPLINT_PROG NAMES cpplint)
      if(CPPLINT_PROG)
        message(STATUS "Found cpplint")
        set(CMAKE_CXX_CPPLINT "${CPPLINT_PROG}")
      else()
        message(STATUS "Not found cpplint")
      endif()
    endif()
  endif()
endfunction()